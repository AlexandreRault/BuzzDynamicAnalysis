attr ast_root 1
ast_edge 0 1
node_type 1 PARSE
ast_edge 1 2
node_type 2 SCRIPT
ast_edge 2 3
node_type 3 STATLIST
ast_edge 3 4
node_type 4 STAT
ast_edge 4 5
node_type 5 COMMAND
ast_edge 5 6
node_type 6 IDREF
ast_edge 6 7
node_type 7 token
tk_type 7 0
tk_image 7 identifier
tk_literal 7 math
line_begin 7 4
column_begin 7 0
ast_edge 6 8
node_type 8 token
tk_type 8 0
tk_image 8 identifier
tk_literal 8 vec2
line_begin 8 4
column_begin 8 5
ast_edge 5 9
node_type 9 EXPRESSION
ast_edge 9 10
node_type 10 LIST
ast_edge 10 11
node_type 11 token
tk_type 11 21
tk_image 11 }
tk_literal 11 UNDEFINED
line_begin 11 4
column_begin 11 13
ast_edge 3 12
node_type 12 STAT
ast_edge 12 13
node_type 13 COMMAND
ast_edge 13 14
node_type 14 IDREF
ast_edge 14 15
node_type 15 token
tk_type 15 0
tk_image 15 identifier
tk_literal 15 math
line_begin 15 12
column_begin 15 0
ast_edge 14 16
node_type 16 token
tk_type 16 0
tk_image 16 identifier
tk_literal 16 vec2
line_begin 16 12
column_begin 16 5
ast_edge 14 17
node_type 17 token
tk_type 17 0
tk_image 17 identifier
tk_literal 17 new
line_begin 17 12
column_begin 17 10
ast_edge 13 18
node_type 18 EXPRESSION
ast_edge 18 19
node_type 19 PRODUCT
ast_edge 19 20
node_type 20 MODULO
ast_edge 20 21
node_type 21 POWER
ast_edge 21 22
node_type 22 BITSHIFT
ast_edge 22 23
node_type 23 BITWISEANDOR
ast_edge 23 24
node_type 24 BITWISENOT
ast_edge 24 25
node_type 25 OPERAND
ast_edge 25 26
node_type 26 LAMBDA
ast_edge 26 27
node_type 27 token
tk_type 27 7
tk_image 27 function
tk_literal 27 function
line_begin 27 12
column_begin 27 16
ast_edge 26 28
node_type 28 token
tk_type 28 22
tk_image 28 (
tk_literal 28 UNDEFINED
line_begin 28 12
column_begin 28 24
ast_edge 26 29
node_type 29 FORMAL_PARAMETER_LIST
ast_edge 29 30
node_type 30 token
tk_type 30 0
tk_image 30 identifier
tk_literal 30 x
line_begin 30 12
column_begin 30 25
ast_edge 29 31
node_type 31 token
tk_type 31 0
tk_image 31 identifier
tk_literal 31 y
line_begin 31 12
column_begin 31 28
ast_edge 26 32
node_type 32 token
tk_type 32 23
tk_image 32 )
tk_literal 32 UNDEFINED
line_begin 32 12
column_begin 32 29
ast_edge 26 33
node_type 33 BLOCK
ast_edge 33 34
node_type 34 token
tk_type 34 20
tk_image 34 {
tk_literal 34 UNDEFINED
line_begin 34 12
column_begin 34 31
ast_edge 33 35
node_type 35 STATLIST
ast_edge 35 36
node_type 36 STAT
ast_edge 35 37
node_type 37 STAT
ast_edge 37 38
node_type 38 RETURN
ast_edge 38 39
node_type 39 CONDITION
ast_edge 39 40
node_type 40 COMPARISON
ast_edge 40 41
node_type 41 EXPRESSION
ast_edge 41 42
node_type 42 LIST
ast_edge 42 43
node_type 43 LIST_STATEMENT
ast_edge 43 44
node_type 44 token
tk_type 44 29
tk_image 44 .
tk_literal 44 UNDEFINED
line_begin 44 13
column_begin 44 11
ast_edge 43 45
node_type 45 token
tk_type 45 0
tk_image 45 x
tk_literal 45 x
line_begin 45 13
column_begin 45 12
ast_edge 43 46
node_type 46 token
tk_type 46 28
tk_image 46 =
tk_literal 46 UNDEFINED
line_begin 46 13
column_begin 46 14
ast_edge 43 47
node_type 47 EXPRESSION
ast_edge 47 48
node_type 48 PRODUCT
ast_edge 48 49
node_type 49 MODULO
ast_edge 49 50
node_type 50 POWER
ast_edge 50 51
node_type 51 BITSHIFT
ast_edge 51 52
node_type 52 BITWISEANDOR
ast_edge 52 53
node_type 53 BITWISENOT
ast_edge 53 54
node_type 54 OPERAND
ast_edge 54 55
node_type 55 IDREF
ast_edge 55 56
node_type 56 token
tk_type 56 0
tk_image 56 identifier
tk_literal 56 x
line_begin 56 13
column_begin 56 16
ast_edge 50 57
node_type 57 POWERREST
ast_edge 42 58
node_type 58 LIST_STATEMENT
ast_edge 58 59
node_type 59 token
tk_type 59 29
tk_image 59 .
tk_literal 59 UNDEFINED
line_begin 59 13
column_begin 59 19
ast_edge 58 60
node_type 60 token
tk_type 60 0
tk_image 60 y
tk_literal 60 y
line_begin 60 13
column_begin 60 20
ast_edge 58 61
node_type 61 token
tk_type 61 28
tk_image 61 =
tk_literal 61 UNDEFINED
line_begin 61 13
column_begin 61 22
ast_edge 58 62
node_type 62 EXPRESSION
ast_edge 62 63
node_type 63 PRODUCT
ast_edge 63 64
node_type 64 MODULO
ast_edge 64 65
node_type 65 POWER
ast_edge 65 66
node_type 66 BITSHIFT
ast_edge 66 67
node_type 67 BITWISEANDOR
ast_edge 67 68
node_type 68 BITWISENOT
ast_edge 68 69
node_type 69 OPERAND
ast_edge 69 70
node_type 70 IDREF
ast_edge 70 71
node_type 71 token
tk_type 71 0
tk_image 71 identifier
tk_literal 71 y
line_begin 71 13
column_begin 71 24
ast_edge 65 72
node_type 72 POWERREST
ast_edge 42 73
node_type 73 token
tk_type 73 21
tk_image 73 }
tk_literal 73 UNDEFINED
line_begin 73 13
column_begin 73 26
ast_edge 35 74
node_type 74 STAT
ast_edge 33 75
node_type 75 token
tk_type 75 21
tk_image 75 }
tk_literal 75 UNDEFINED
line_begin 75 14
column_begin 75 0
ast_edge 21 76
node_type 76 POWERREST
ast_edge 3 77
node_type 77 STAT
ast_edge 77 78
node_type 78 COMMAND
ast_edge 78 79
node_type 79 IDREF
ast_edge 79 80
node_type 80 token
tk_type 80 0
tk_image 80 identifier
tk_literal 80 math
line_begin 80 22
column_begin 80 0
ast_edge 79 81
node_type 81 token
tk_type 81 0
tk_image 81 identifier
tk_literal 81 vec2
line_begin 81 22
column_begin 81 5
ast_edge 79 82
node_type 82 token
tk_type 82 0
tk_image 82 identifier
tk_literal 82 newp
line_begin 82 22
column_begin 82 10
ast_edge 78 83
node_type 83 EXPRESSION
ast_edge 83 84
node_type 84 PRODUCT
ast_edge 84 85
node_type 85 MODULO
ast_edge 85 86
node_type 86 POWER
ast_edge 86 87
node_type 87 BITSHIFT
ast_edge 87 88
node_type 88 BITWISEANDOR
ast_edge 88 89
node_type 89 BITWISENOT
ast_edge 89 90
node_type 90 OPERAND
ast_edge 90 91
node_type 91 LAMBDA
ast_edge 91 92
node_type 92 token
tk_type 92 7
tk_image 92 function
tk_literal 92 function
line_begin 92 22
column_begin 92 17
ast_edge 91 93
node_type 93 token
tk_type 93 22
tk_image 93 (
tk_literal 93 UNDEFINED
line_begin 93 22
column_begin 93 25
ast_edge 91 94
node_type 94 FORMAL_PARAMETER_LIST
ast_edge 94 95
node_type 95 token
tk_type 95 0
tk_image 95 identifier
tk_literal 95 l
line_begin 95 22
column_begin 95 26
ast_edge 94 96
node_type 96 token
tk_type 96 0
tk_image 96 identifier
tk_literal 96 a
line_begin 96 22
column_begin 96 29
ast_edge 91 97
node_type 97 token
tk_type 97 23
tk_image 97 )
tk_literal 97 UNDEFINED
line_begin 97 22
column_begin 97 30
ast_edge 91 98
node_type 98 BLOCK
ast_edge 98 99
node_type 99 token
tk_type 99 20
tk_image 99 {
tk_literal 99 UNDEFINED
line_begin 99 22
column_begin 99 32
ast_edge 98 100
node_type 100 STATLIST
ast_edge 100 101
node_type 101 STAT
ast_edge 100 102
node_type 102 STAT
ast_edge 102 103
node_type 103 RETURN
ast_edge 103 104
node_type 104 CONDITION
ast_edge 104 105
node_type 105 COMPARISON
ast_edge 105 106
node_type 106 EXPRESSION
ast_edge 106 107
node_type 107 LIST
ast_edge 107 108
node_type 108 LIST_STATEMENT
ast_edge 108 109
node_type 109 token
tk_type 109 29
tk_image 109 .
tk_literal 109 UNDEFINED
line_begin 109 24
column_begin 109 4
ast_edge 108 110
node_type 110 token
tk_type 110 0
tk_image 110 x
tk_literal 110 x
line_begin 110 24
column_begin 110 5
ast_edge 108 111
node_type 111 token
tk_type 111 28
tk_image 111 =
tk_literal 111 UNDEFINED
line_begin 111 24
column_begin 111 7
ast_edge 108 112
node_type 112 EXPRESSION
ast_edge 112 113
node_type 113 PRODUCT
ast_edge 113 114
node_type 114 MODULO
ast_edge 114 115
node_type 115 POWER
ast_edge 115 116
node_type 116 BITSHIFT
ast_edge 116 117
node_type 117 BITWISEANDOR
ast_edge 117 118
node_type 118 BITWISENOT
ast_edge 118 119
node_type 119 OPERAND
ast_edge 119 120
node_type 120 IDREF
ast_edge 120 121
node_type 121 token
tk_type 121 0
tk_image 121 identifier
tk_literal 121 l
line_begin 121 24
column_begin 121 9
ast_edge 115 122
node_type 122 POWERREST
ast_edge 113 123
node_type 123 MODULO
ast_edge 123 124
node_type 124 POWER
ast_edge 124 125
node_type 125 BITSHIFT
ast_edge 125 126
node_type 126 BITWISEANDOR
ast_edge 126 127
node_type 127 BITWISENOT
ast_edge 127 128
node_type 128 OPERAND
ast_edge 128 129
node_type 129 IDREF
ast_edge 129 130
node_type 130 token
tk_type 130 0
tk_image 130 identifier
tk_literal 130 math
line_begin 130 24
column_begin 130 13
ast_edge 129 131
node_type 131 token
tk_type 131 0
tk_image 131 identifier
tk_literal 131 cos
line_begin 131 24
column_begin 131 18
ast_edge 129 132
node_type 132 CALL
ast_edge 129 133
node_type 133 ACTUAL_PARAMETER_LIST
ast_edge 133 134
node_type 134 CONDITION
ast_edge 134 135
node_type 135 COMPARISON
ast_edge 135 136
node_type 136 EXPRESSION
ast_edge 136 137
node_type 137 PRODUCT
ast_edge 137 138
node_type 138 MODULO
ast_edge 138 139
node_type 139 POWER
ast_edge 139 140
node_type 140 BITSHIFT
ast_edge 140 141
node_type 141 BITWISEANDOR
ast_edge 141 142
node_type 142 BITWISENOT
ast_edge 142 143
node_type 143 OPERAND
ast_edge 143 144
node_type 144 IDREF
ast_edge 144 145
node_type 145 token
tk_type 145 0
tk_image 145 identifier
tk_literal 145 a
line_begin 145 24
column_begin 145 22
ast_edge 139 146
node_type 146 POWERREST
ast_edge 129 147
node_type 147 token
tk_type 147 23
tk_image 147 )
tk_literal 147 UNDEFINED
line_begin 147 24
column_begin 147 23
ast_edge 124 148
node_type 148 POWERREST
ast_edge 113 149
node_type 149 BINARY_ARITHM_OP
ast_edge 113 150
node_type 150 token
tk_type 150 14
tk_image 150 *
tk_literal 150 *
line_begin 150 24
column_begin 150 11
ast_edge 107 151
node_type 151 LIST_STATEMENT
ast_edge 151 152
node_type 152 token
tk_type 152 29
tk_image 152 .
tk_literal 152 UNDEFINED
line_begin 152 25
column_begin 152 4
ast_edge 151 153
node_type 153 token
tk_type 153 0
tk_image 153 y
tk_literal 153 y
line_begin 153 25
column_begin 153 5
ast_edge 151 154
node_type 154 token
tk_type 154 28
tk_image 154 =
tk_literal 154 UNDEFINED
line_begin 154 25
column_begin 154 7
ast_edge 151 155
node_type 155 EXPRESSION
ast_edge 155 156
node_type 156 PRODUCT
ast_edge 156 157
node_type 157 MODULO
ast_edge 157 158
node_type 158 POWER
ast_edge 158 159
node_type 159 BITSHIFT
ast_edge 159 160
node_type 160 BITWISEANDOR
ast_edge 160 161
node_type 161 BITWISENOT
ast_edge 161 162
node_type 162 OPERAND
ast_edge 162 163
node_type 163 IDREF
ast_edge 163 164
node_type 164 token
tk_type 164 0
tk_image 164 identifier
tk_literal 164 l
line_begin 164 25
column_begin 164 9
ast_edge 158 165
node_type 165 POWERREST
ast_edge 156 166
node_type 166 MODULO
ast_edge 166 167
node_type 167 POWER
ast_edge 167 168
node_type 168 BITSHIFT
ast_edge 168 169
node_type 169 BITWISEANDOR
ast_edge 169 170
node_type 170 BITWISENOT
ast_edge 170 171
node_type 171 OPERAND
ast_edge 171 172
node_type 172 IDREF
ast_edge 172 173
node_type 173 token
tk_type 173 0
tk_image 173 identifier
tk_literal 173 math
line_begin 173 25
column_begin 173 13
ast_edge 172 174
node_type 174 token
tk_type 174 0
tk_image 174 identifier
tk_literal 174 sin
line_begin 174 25
column_begin 174 18
ast_edge 172 175
node_type 175 CALL
ast_edge 172 176
node_type 176 ACTUAL_PARAMETER_LIST
ast_edge 176 177
node_type 177 CONDITION
ast_edge 177 178
node_type 178 COMPARISON
ast_edge 178 179
node_type 179 EXPRESSION
ast_edge 179 180
node_type 180 PRODUCT
ast_edge 180 181
node_type 181 MODULO
ast_edge 181 182
node_type 182 POWER
ast_edge 182 183
node_type 183 BITSHIFT
ast_edge 183 184
node_type 184 BITWISEANDOR
ast_edge 184 185
node_type 185 BITWISENOT
ast_edge 185 186
node_type 186 OPERAND
ast_edge 186 187
node_type 187 IDREF
ast_edge 187 188
node_type 188 token
tk_type 188 0
tk_image 188 identifier
tk_literal 188 a
line_begin 188 25
column_begin 188 22
ast_edge 182 189
node_type 189 POWERREST
ast_edge 172 190
node_type 190 token
tk_type 190 23
tk_image 190 )
tk_literal 190 UNDEFINED
line_begin 190 25
column_begin 190 23
ast_edge 167 191
node_type 191 POWERREST
ast_edge 156 192
node_type 192 BINARY_ARITHM_OP
ast_edge 156 193
node_type 193 token
tk_type 193 14
tk_image 193 *
tk_literal 193 *
line_begin 193 25
column_begin 193 11
ast_edge 107 194
node_type 194 token
tk_type 194 21
tk_image 194 }
tk_literal 194 UNDEFINED
line_begin 194 26
column_begin 194 2
ast_edge 100 195
node_type 195 STAT
ast_edge 98 196
node_type 196 token
tk_type 196 21
tk_image 196 }
tk_literal 196 UNDEFINED
line_begin 196 27
column_begin 196 0
ast_edge 86 197
node_type 197 POWERREST
ast_edge 3 198
node_type 198 STAT
ast_edge 198 199
node_type 199 COMMAND
ast_edge 199 200
node_type 200 IDREF
ast_edge 200 201
node_type 201 token
tk_type 201 0
tk_image 201 identifier
tk_literal 201 math
line_begin 201 34
column_begin 201 0
ast_edge 200 202
node_type 202 token
tk_type 202 0
tk_image 202 identifier
tk_literal 202 vec2
line_begin 202 34
column_begin 202 5
ast_edge 200 203
node_type 203 token
tk_type 203 0
tk_image 203 identifier
tk_literal 203 length
line_begin 203 34
column_begin 203 10
ast_edge 199 204
node_type 204 EXPRESSION
ast_edge 204 205
node_type 205 PRODUCT
ast_edge 205 206
node_type 206 MODULO
ast_edge 206 207
node_type 207 POWER
ast_edge 207 208
node_type 208 BITSHIFT
ast_edge 208 209
node_type 209 BITWISEANDOR
ast_edge 209 210
node_type 210 BITWISENOT
ast_edge 210 211
node_type 211 OPERAND
ast_edge 211 212
node_type 212 LAMBDA
ast_edge 212 213
node_type 213 token
tk_type 213 7
tk_image 213 function
tk_literal 213 function
line_begin 213 34
column_begin 213 19
ast_edge 212 214
node_type 214 token
tk_type 214 22
tk_image 214 (
tk_literal 214 UNDEFINED
line_begin 214 34
column_begin 214 27
ast_edge 212 215
node_type 215 FORMAL_PARAMETER_LIST
ast_edge 215 216
node_type 216 token
tk_type 216 0
tk_image 216 identifier
tk_literal 216 v
line_begin 216 34
column_begin 216 28
ast_edge 212 217
node_type 217 token
tk_type 217 23
tk_image 217 )
tk_literal 217 UNDEFINED
line_begin 217 34
column_begin 217 29
ast_edge 212 218
node_type 218 BLOCK
ast_edge 218 219
node_type 219 token
tk_type 219 20
tk_image 219 {
tk_literal 219 UNDEFINED
line_begin 219 34
column_begin 219 31
ast_edge 218 220
node_type 220 STATLIST
ast_edge 220 221
node_type 221 STAT
ast_edge 220 222
node_type 222 STAT
ast_edge 222 223
node_type 223 RETURN
ast_edge 223 224
node_type 224 CONDITION
ast_edge 224 225
node_type 225 COMPARISON
ast_edge 225 226
node_type 226 EXPRESSION
ast_edge 226 227
node_type 227 PRODUCT
ast_edge 227 228
node_type 228 MODULO
ast_edge 228 229
node_type 229 POWER
ast_edge 229 230
node_type 230 BITSHIFT
ast_edge 230 231
node_type 231 BITWISEANDOR
ast_edge 231 232
node_type 232 BITWISENOT
ast_edge 232 233
node_type 233 OPERAND
ast_edge 233 234
node_type 234 IDREF
ast_edge 234 235
node_type 235 token
tk_type 235 0
tk_image 235 identifier
tk_literal 235 math
line_begin 235 35
column_begin 235 9
ast_edge 234 236
node_type 236 token
tk_type 236 0
tk_image 236 identifier
tk_literal 236 sqrt
line_begin 236 35
column_begin 236 14
ast_edge 234 237
node_type 237 CALL
ast_edge 234 238
node_type 238 ACTUAL_PARAMETER_LIST
ast_edge 238 239
node_type 239 CONDITION
ast_edge 239 240
node_type 240 COMPARISON
ast_edge 240 241
node_type 241 EXPRESSION
ast_edge 241 242
node_type 242 PRODUCT
ast_edge 242 243
node_type 243 MODULO
ast_edge 243 244
node_type 244 POWER
ast_edge 244 245
node_type 245 BITSHIFT
ast_edge 245 246
node_type 246 BITWISEANDOR
ast_edge 246 247
node_type 247 BITWISENOT
ast_edge 247 248
node_type 248 OPERAND
ast_edge 248 249
node_type 249 IDREF
ast_edge 249 250
node_type 250 token
tk_type 250 0
tk_image 250 identifier
tk_literal 250 v
line_begin 250 35
column_begin 250 19
ast_edge 249 251
node_type 251 token
tk_type 251 0
tk_image 251 identifier
tk_literal 251 x
line_begin 251 35
column_begin 251 21
ast_edge 244 252
node_type 252 POWERREST
ast_edge 242 253
node_type 253 MODULO
ast_edge 253 254
node_type 254 POWER
ast_edge 254 255
node_type 255 BITSHIFT
ast_edge 255 256
node_type 256 BITWISEANDOR
ast_edge 256 257
node_type 257 BITWISENOT
ast_edge 257 258
node_type 258 OPERAND
ast_edge 258 259
node_type 259 IDREF
ast_edge 259 260
node_type 260 token
tk_type 260 0
tk_image 260 identifier
tk_literal 260 v
line_begin 260 35
column_begin 260 25
ast_edge 259 261
node_type 261 token
tk_type 261 0
tk_image 261 identifier
tk_literal 261 x
line_begin 261 35
column_begin 261 27
ast_edge 254 262
node_type 262 POWERREST
ast_edge 242 263
node_type 263 BINARY_ARITHM_OP
ast_edge 242 264
node_type 264 token
tk_type 264 14
tk_image 264 *
tk_literal 264 *
line_begin 264 35
column_begin 264 23
ast_edge 241 265
node_type 265 PRODUCT
ast_edge 265 266
node_type 266 MODULO
ast_edge 266 267
node_type 267 POWER
ast_edge 267 268
node_type 268 BITSHIFT
ast_edge 268 269
node_type 269 BITWISEANDOR
ast_edge 269 270
node_type 270 BITWISENOT
ast_edge 270 271
node_type 271 OPERAND
ast_edge 271 272
node_type 272 IDREF
ast_edge 272 273
node_type 273 token
tk_type 273 0
tk_image 273 identifier
tk_literal 273 v
line_begin 273 35
column_begin 273 31
ast_edge 272 274
node_type 274 token
tk_type 274 0
tk_image 274 identifier
tk_literal 274 y
line_begin 274 35
column_begin 274 33
ast_edge 267 275
node_type 275 POWERREST
ast_edge 265 276
node_type 276 MODULO
ast_edge 276 277
node_type 277 POWER
ast_edge 277 278
node_type 278 BITSHIFT
ast_edge 278 279
node_type 279 BITWISEANDOR
ast_edge 279 280
node_type 280 BITWISENOT
ast_edge 280 281
node_type 281 OPERAND
ast_edge 281 282
node_type 282 IDREF
ast_edge 282 283
node_type 283 token
tk_type 283 0
tk_image 283 identifier
tk_literal 283 v
line_begin 283 35
column_begin 283 37
ast_edge 282 284
node_type 284 token
tk_type 284 0
tk_image 284 identifier
tk_literal 284 y
line_begin 284 35
column_begin 284 39
ast_edge 277 285
node_type 285 POWERREST
ast_edge 265 286
node_type 286 BINARY_ARITHM_OP
ast_edge 265 287
node_type 287 token
tk_type 287 14
tk_image 287 *
tk_literal 287 *
line_begin 287 35
column_begin 287 35
ast_edge 241 288
node_type 288 BINARY_ARITHM_OP
ast_edge 241 289
node_type 289 token
tk_type 289 13
tk_image 289 +
tk_literal 289 +
line_begin 289 35
column_begin 289 29
ast_edge 234 290
node_type 290 token
tk_type 290 23
tk_image 290 )
tk_literal 290 UNDEFINED
line_begin 290 35
column_begin 290 40
ast_edge 229 291
node_type 291 POWERREST
ast_edge 220 292
node_type 292 STAT
ast_edge 218 293
node_type 293 token
tk_type 293 21
tk_image 293 }
tk_literal 293 UNDEFINED
line_begin 293 36
column_begin 293 0
ast_edge 207 294
node_type 294 POWERREST
ast_edge 3 295
node_type 295 STAT
ast_edge 295 296
node_type 296 COMMAND
ast_edge 296 297
node_type 297 IDREF
ast_edge 297 298
node_type 298 token
tk_type 298 0
tk_image 298 identifier
tk_literal 298 math
line_begin 298 43
column_begin 298 0
ast_edge 297 299
node_type 299 token
tk_type 299 0
tk_image 299 identifier
tk_literal 299 vec2
line_begin 299 43
column_begin 299 5
ast_edge 297 300
node_type 300 token
tk_type 300 0
tk_image 300 identifier
tk_literal 300 angle
line_begin 300 43
column_begin 300 10
ast_edge 296 301
node_type 301 EXPRESSION
ast_edge 301 302
node_type 302 PRODUCT
ast_edge 302 303
node_type 303 MODULO
ast_edge 303 304
node_type 304 POWER
ast_edge 304 305
node_type 305 BITSHIFT
ast_edge 305 306
node_type 306 BITWISEANDOR
ast_edge 306 307
node_type 307 BITWISENOT
ast_edge 307 308
node_type 308 OPERAND
ast_edge 308 309
node_type 309 LAMBDA
ast_edge 309 310
node_type 310 token
tk_type 310 7
tk_image 310 function
tk_literal 310 function
line_begin 310 43
column_begin 310 18
ast_edge 309 311
node_type 311 token
tk_type 311 22
tk_image 311 (
tk_literal 311 UNDEFINED
line_begin 311 43
column_begin 311 26
ast_edge 309 312
node_type 312 FORMAL_PARAMETER_LIST
ast_edge 312 313
node_type 313 token
tk_type 313 0
tk_image 313 identifier
tk_literal 313 v
line_begin 313 43
column_begin 313 27
ast_edge 309 314
node_type 314 token
tk_type 314 23
tk_image 314 )
tk_literal 314 UNDEFINED
line_begin 314 43
column_begin 314 28
ast_edge 309 315
node_type 315 BLOCK
ast_edge 315 316
node_type 316 token
tk_type 316 20
tk_image 316 {
tk_literal 316 UNDEFINED
line_begin 316 43
column_begin 316 30
ast_edge 315 317
node_type 317 STATLIST
ast_edge 317 318
node_type 318 STAT
ast_edge 317 319
node_type 319 STAT
ast_edge 319 320
node_type 320 RETURN
ast_edge 320 321
node_type 321 CONDITION
ast_edge 321 322
node_type 322 COMPARISON
ast_edge 322 323
node_type 323 EXPRESSION
ast_edge 323 324
node_type 324 PRODUCT
ast_edge 324 325
node_type 325 MODULO
ast_edge 325 326
node_type 326 POWER
ast_edge 326 327
node_type 327 BITSHIFT
ast_edge 327 328
node_type 328 BITWISEANDOR
ast_edge 328 329
node_type 329 BITWISENOT
ast_edge 329 330
node_type 330 OPERAND
ast_edge 330 331
node_type 331 IDREF
ast_edge 331 332
node_type 332 token
tk_type 332 0
tk_image 332 identifier
tk_literal 332 math
line_begin 332 44
column_begin 332 9
ast_edge 331 333
node_type 333 token
tk_type 333 0
tk_image 333 identifier
tk_literal 333 atan
line_begin 333 44
column_begin 333 14
ast_edge 331 334
node_type 334 CALL
ast_edge 331 335
node_type 335 ACTUAL_PARAMETER_LIST
ast_edge 335 336
node_type 336 CONDITION
ast_edge 336 337
node_type 337 COMPARISON
ast_edge 337 338
node_type 338 EXPRESSION
ast_edge 338 339
node_type 339 PRODUCT
ast_edge 339 340
node_type 340 MODULO
ast_edge 340 341
node_type 341 POWER
ast_edge 341 342
node_type 342 BITSHIFT
ast_edge 342 343
node_type 343 BITWISEANDOR
ast_edge 343 344
node_type 344 BITWISENOT
ast_edge 344 345
node_type 345 OPERAND
ast_edge 345 346
node_type 346 IDREF
ast_edge 346 347
node_type 347 token
tk_type 347 0
tk_image 347 identifier
tk_literal 347 v
line_begin 347 44
column_begin 347 19
ast_edge 346 348
node_type 348 token
tk_type 348 0
tk_image 348 identifier
tk_literal 348 y
line_begin 348 44
column_begin 348 21
ast_edge 341 349
node_type 349 POWERREST
ast_edge 335 350
node_type 350 CONDITION
ast_edge 350 351
node_type 351 COMPARISON
ast_edge 351 352
node_type 352 EXPRESSION
ast_edge 352 353
node_type 353 PRODUCT
ast_edge 353 354
node_type 354 MODULO
ast_edge 354 355
node_type 355 POWER
ast_edge 355 356
node_type 356 BITSHIFT
ast_edge 356 357
node_type 357 BITWISEANDOR
ast_edge 357 358
node_type 358 BITWISENOT
ast_edge 358 359
node_type 359 OPERAND
ast_edge 359 360
node_type 360 IDREF
ast_edge 360 361
node_type 361 token
tk_type 361 0
tk_image 361 identifier
tk_literal 361 v
line_begin 361 44
column_begin 361 24
ast_edge 360 362
node_type 362 token
tk_type 362 0
tk_image 362 identifier
tk_literal 362 x
line_begin 362 44
column_begin 362 26
ast_edge 355 363
node_type 363 POWERREST
ast_edge 331 364
node_type 364 token
tk_type 364 23
tk_image 364 )
tk_literal 364 UNDEFINED
line_begin 364 44
column_begin 364 27
ast_edge 326 365
node_type 365 POWERREST
ast_edge 317 366
node_type 366 STAT
ast_edge 315 367
node_type 367 token
tk_type 367 21
tk_image 367 }
tk_literal 367 UNDEFINED
line_begin 367 45
column_begin 367 0
ast_edge 304 368
node_type 368 POWERREST
ast_edge 3 369
node_type 369 STAT
ast_edge 369 370
node_type 370 COMMAND
ast_edge 370 371
node_type 371 IDREF
ast_edge 371 372
node_type 372 token
tk_type 372 0
tk_image 372 identifier
tk_literal 372 math
line_begin 372 52
column_begin 372 0
ast_edge 371 373
node_type 373 token
tk_type 373 0
tk_image 373 identifier
tk_literal 373 vec2
line_begin 373 52
column_begin 373 5
ast_edge 371 374
node_type 374 token
tk_type 374 0
tk_image 374 identifier
tk_literal 374 norm
line_begin 374 52
column_begin 374 10
ast_edge 370 375
node_type 375 EXPRESSION
ast_edge 375 376
node_type 376 PRODUCT
ast_edge 376 377
node_type 377 MODULO
ast_edge 377 378
node_type 378 POWER
ast_edge 378 379
node_type 379 BITSHIFT
ast_edge 379 380
node_type 380 BITWISEANDOR
ast_edge 380 381
node_type 381 BITWISENOT
ast_edge 381 382
node_type 382 OPERAND
ast_edge 382 383
node_type 383 LAMBDA
ast_edge 383 384
node_type 384 token
tk_type 384 7
tk_image 384 function
tk_literal 384 function
line_begin 384 52
column_begin 384 17
ast_edge 383 385
node_type 385 token
tk_type 385 22
tk_image 385 (
tk_literal 385 UNDEFINED
line_begin 385 52
column_begin 385 25
ast_edge 383 386
node_type 386 FORMAL_PARAMETER_LIST
ast_edge 386 387
node_type 387 token
tk_type 387 0
tk_image 387 identifier
tk_literal 387 v
line_begin 387 52
column_begin 387 26
ast_edge 383 388
node_type 388 token
tk_type 388 23
tk_image 388 )
tk_literal 388 UNDEFINED
line_begin 388 52
column_begin 388 27
ast_edge 383 389
node_type 389 BLOCK
ast_edge 389 390
node_type 390 token
tk_type 390 20
tk_image 390 {
tk_literal 390 UNDEFINED
line_begin 390 52
column_begin 390 29
ast_edge 389 391
node_type 391 STATLIST
ast_edge 391 392
node_type 392 STAT
ast_edge 391 393
node_type 393 STAT
ast_edge 393 394
node_type 394 VAR
ast_edge 394 395
node_type 395 token
tk_type 395 3
tk_image 395 variable
tk_literal 395 var
line_begin 395 53
column_begin 395 2
ast_edge 394 396
node_type 396 token
tk_type 396 0
tk_image 396 identifier
tk_literal 396 l
line_begin 396 53
column_begin 396 6
ast_edge 394 397
node_type 397 EXPRESSION
ast_edge 397 398
node_type 398 PRODUCT
ast_edge 398 399
node_type 399 MODULO
ast_edge 399 400
node_type 400 POWER
ast_edge 400 401
node_type 401 BITSHIFT
ast_edge 401 402
node_type 402 BITWISEANDOR
ast_edge 402 403
node_type 403 BITWISENOT
ast_edge 403 404
node_type 404 OPERAND
ast_edge 404 405
node_type 405 IDREF
ast_edge 405 406
node_type 406 token
tk_type 406 0
tk_image 406 identifier
tk_literal 406 math
line_begin 406 53
column_begin 406 10
ast_edge 405 407
node_type 407 token
tk_type 407 0
tk_image 407 identifier
tk_literal 407 length
line_begin 407 53
column_begin 407 15
ast_edge 405 408
node_type 408 CALL
ast_edge 405 409
node_type 409 ACTUAL_PARAMETER_LIST
ast_edge 409 410
node_type 410 CONDITION
ast_edge 410 411
node_type 411 COMPARISON
ast_edge 411 412
node_type 412 EXPRESSION
ast_edge 412 413
node_type 413 PRODUCT
ast_edge 413 414
node_type 414 MODULO
ast_edge 414 415
node_type 415 POWER
ast_edge 415 416
node_type 416 BITSHIFT
ast_edge 416 417
node_type 417 BITWISEANDOR
ast_edge 417 418
node_type 418 BITWISENOT
ast_edge 418 419
node_type 419 OPERAND
ast_edge 419 420
node_type 420 IDREF
ast_edge 420 421
node_type 421 token
tk_type 421 0
tk_image 421 identifier
tk_literal 421 v
line_begin 421 53
column_begin 421 22
ast_edge 415 422
node_type 422 POWERREST
ast_edge 405 423
node_type 423 token
tk_type 423 23
tk_image 423 )
tk_literal 423 UNDEFINED
line_begin 423 53
column_begin 423 23
ast_edge 400 424
node_type 424 POWERREST
ast_edge 391 425
node_type 425 STAT
ast_edge 425 426
node_type 426 RETURN
ast_edge 426 427
node_type 427 CONDITION
ast_edge 427 428
node_type 428 COMPARISON
ast_edge 428 429
node_type 429 EXPRESSION
ast_edge 429 430
node_type 430 LIST
ast_edge 430 431
node_type 431 LIST_STATEMENT
ast_edge 431 432
node_type 432 token
tk_type 432 29
tk_image 432 .
tk_literal 432 UNDEFINED
line_begin 432 55
column_begin 432 4
ast_edge 431 433
node_type 433 token
tk_type 433 0
tk_image 433 x
tk_literal 433 x
line_begin 433 55
column_begin 433 5
ast_edge 431 434
node_type 434 token
tk_type 434 28
tk_image 434 =
tk_literal 434 UNDEFINED
line_begin 434 55
column_begin 434 7
ast_edge 431 435
node_type 435 EXPRESSION
ast_edge 435 436
node_type 436 PRODUCT
ast_edge 436 437
node_type 437 MODULO
ast_edge 437 438
node_type 438 POWER
ast_edge 438 439
node_type 439 BITSHIFT
ast_edge 439 440
node_type 440 BITWISEANDOR
ast_edge 440 441
node_type 441 BITWISENOT
ast_edge 441 442
node_type 442 OPERAND
ast_edge 442 443
node_type 443 IDREF
ast_edge 443 444
node_type 444 token
tk_type 444 0
tk_image 444 identifier
tk_literal 444 v
line_begin 444 55
column_begin 444 9
ast_edge 443 445
node_type 445 token
tk_type 445 0
tk_image 445 identifier
tk_literal 445 x
line_begin 445 55
column_begin 445 11
ast_edge 438 446
node_type 446 POWERREST
ast_edge 436 447
node_type 447 MODULO
ast_edge 447 448
node_type 448 POWER
ast_edge 448 449
node_type 449 BITSHIFT
ast_edge 449 450
node_type 450 BITWISEANDOR
ast_edge 450 451
node_type 451 BITWISENOT
ast_edge 451 452
node_type 452 OPERAND
ast_edge 452 453
node_type 453 IDREF
ast_edge 453 454
node_type 454 token
tk_type 454 0
tk_image 454 identifier
tk_literal 454 l
line_begin 454 55
column_begin 454 15
ast_edge 448 455
node_type 455 POWERREST
ast_edge 436 456
node_type 456 BINARY_ARITHM_OP
ast_edge 436 457
node_type 457 token
tk_type 457 14
tk_image 457 /
tk_literal 457 /
line_begin 457 55
column_begin 457 13
ast_edge 430 458
node_type 458 LIST_STATEMENT
ast_edge 458 459
node_type 459 token
tk_type 459 29
tk_image 459 .
tk_literal 459 UNDEFINED
line_begin 459 56
column_begin 459 4
ast_edge 458 460
node_type 460 token
tk_type 460 0
tk_image 460 y
tk_literal 460 y
line_begin 460 56
column_begin 460 5
ast_edge 458 461
node_type 461 token
tk_type 461 28
tk_image 461 =
tk_literal 461 UNDEFINED
line_begin 461 56
column_begin 461 7
ast_edge 458 462
node_type 462 EXPRESSION
ast_edge 462 463
node_type 463 PRODUCT
ast_edge 463 464
node_type 464 MODULO
ast_edge 464 465
node_type 465 POWER
ast_edge 465 466
node_type 466 BITSHIFT
ast_edge 466 467
node_type 467 BITWISEANDOR
ast_edge 467 468
node_type 468 BITWISENOT
ast_edge 468 469
node_type 469 OPERAND
ast_edge 469 470
node_type 470 IDREF
ast_edge 470 471
node_type 471 token
tk_type 471 0
tk_image 471 identifier
tk_literal 471 v
line_begin 471 56
column_begin 471 9
ast_edge 470 472
node_type 472 token
tk_type 472 0
tk_image 472 identifier
tk_literal 472 y
line_begin 472 56
column_begin 472 11
ast_edge 465 473
node_type 473 POWERREST
ast_edge 463 474
node_type 474 MODULO
ast_edge 474 475
node_type 475 POWER
ast_edge 475 476
node_type 476 BITSHIFT
ast_edge 476 477
node_type 477 BITWISEANDOR
ast_edge 477 478
node_type 478 BITWISENOT
ast_edge 478 479
node_type 479 OPERAND
ast_edge 479 480
node_type 480 IDREF
ast_edge 480 481
node_type 481 token
tk_type 481 0
tk_image 481 identifier
tk_literal 481 l
line_begin 481 56
column_begin 481 15
ast_edge 475 482
node_type 482 POWERREST
ast_edge 463 483
node_type 483 BINARY_ARITHM_OP
ast_edge 463 484
node_type 484 token
tk_type 484 14
tk_image 484 /
tk_literal 484 /
line_begin 484 56
column_begin 484 13
ast_edge 430 485
node_type 485 token
tk_type 485 21
tk_image 485 }
tk_literal 485 UNDEFINED
line_begin 485 57
column_begin 485 2
ast_edge 391 486
node_type 486 STAT
ast_edge 389 487
node_type 487 token
tk_type 487 21
tk_image 487 }
tk_literal 487 UNDEFINED
line_begin 487 58
column_begin 487 0
ast_edge 378 488
node_type 488 POWERREST
ast_edge 3 489
node_type 489 STAT
ast_edge 489 490
node_type 490 COMMAND
ast_edge 490 491
node_type 491 IDREF
ast_edge 491 492
node_type 492 token
tk_type 492 0
tk_image 492 identifier
tk_literal 492 math
line_begin 492 66
column_begin 492 0
ast_edge 491 493
node_type 493 token
tk_type 493 0
tk_image 493 identifier
tk_literal 493 vec2
line_begin 493 66
column_begin 493 5
ast_edge 491 494
node_type 494 token
tk_type 494 0
tk_image 494 identifier
tk_literal 494 add
line_begin 494 66
column_begin 494 10
ast_edge 490 495
node_type 495 EXPRESSION
ast_edge 495 496
node_type 496 PRODUCT
ast_edge 496 497
node_type 497 MODULO
ast_edge 497 498
node_type 498 POWER
ast_edge 498 499
node_type 499 BITSHIFT
ast_edge 499 500
node_type 500 BITWISEANDOR
ast_edge 500 501
node_type 501 BITWISENOT
ast_edge 501 502
node_type 502 OPERAND
ast_edge 502 503
node_type 503 LAMBDA
ast_edge 503 504
node_type 504 token
tk_type 504 7
tk_image 504 function
tk_literal 504 function
line_begin 504 66
column_begin 504 16
ast_edge 503 505
node_type 505 token
tk_type 505 22
tk_image 505 (
tk_literal 505 UNDEFINED
line_begin 505 66
column_begin 505 24
ast_edge 503 506
node_type 506 FORMAL_PARAMETER_LIST
ast_edge 506 507
node_type 507 token
tk_type 507 0
tk_image 507 identifier
tk_literal 507 v1
line_begin 507 66
column_begin 507 25
ast_edge 506 508
node_type 508 token
tk_type 508 0
tk_image 508 identifier
tk_literal 508 v2
line_begin 508 66
column_begin 508 29
ast_edge 503 509
node_type 509 token
tk_type 509 23
tk_image 509 )
tk_literal 509 UNDEFINED
line_begin 509 66
column_begin 509 31
ast_edge 503 510
node_type 510 BLOCK
ast_edge 510 511
node_type 511 token
tk_type 511 20
tk_image 511 {
tk_literal 511 UNDEFINED
line_begin 511 66
column_begin 511 33
ast_edge 510 512
node_type 512 STATLIST
ast_edge 512 513
node_type 513 STAT
ast_edge 512 514
node_type 514 STAT
ast_edge 514 515
node_type 515 RETURN
ast_edge 515 516
node_type 516 CONDITION
ast_edge 516 517
node_type 517 COMPARISON
ast_edge 517 518
node_type 518 EXPRESSION
ast_edge 518 519
node_type 519 LIST
ast_edge 519 520
node_type 520 LIST_STATEMENT
ast_edge 520 521
node_type 521 token
tk_type 521 29
tk_image 521 .
tk_literal 521 UNDEFINED
line_begin 521 68
column_begin 521 4
ast_edge 520 522
node_type 522 token
tk_type 522 0
tk_image 522 x
tk_literal 522 x
line_begin 522 68
column_begin 522 5
ast_edge 520 523
node_type 523 token
tk_type 523 28
tk_image 523 =
tk_literal 523 UNDEFINED
line_begin 523 68
column_begin 523 7
ast_edge 520 524
node_type 524 EXPRESSION
ast_edge 524 525
node_type 525 PRODUCT
ast_edge 525 526
node_type 526 MODULO
ast_edge 526 527
node_type 527 POWER
ast_edge 527 528
node_type 528 BITSHIFT
ast_edge 528 529
node_type 529 BITWISEANDOR
ast_edge 529 530
node_type 530 BITWISENOT
ast_edge 530 531
node_type 531 OPERAND
ast_edge 531 532
node_type 532 IDREF
ast_edge 532 533
node_type 533 token
tk_type 533 0
tk_image 533 identifier
tk_literal 533 v1
line_begin 533 68
column_begin 533 9
ast_edge 532 534
node_type 534 token
tk_type 534 0
tk_image 534 identifier
tk_literal 534 x
line_begin 534 68
column_begin 534 12
ast_edge 527 535
node_type 535 POWERREST
ast_edge 524 536
node_type 536 PRODUCT
ast_edge 536 537
node_type 537 MODULO
ast_edge 537 538
node_type 538 POWER
ast_edge 538 539
node_type 539 BITSHIFT
ast_edge 539 540
node_type 540 BITWISEANDOR
ast_edge 540 541
node_type 541 BITWISENOT
ast_edge 541 542
node_type 542 OPERAND
ast_edge 542 543
node_type 543 IDREF
ast_edge 543 544
node_type 544 token
tk_type 544 0
tk_image 544 identifier
tk_literal 544 v2
line_begin 544 68
column_begin 544 16
ast_edge 543 545
node_type 545 token
tk_type 545 0
tk_image 545 identifier
tk_literal 545 x
line_begin 545 68
column_begin 545 19
ast_edge 538 546
node_type 546 POWERREST
ast_edge 524 547
node_type 547 BINARY_ARITHM_OP
ast_edge 524 548
node_type 548 token
tk_type 548 13
tk_image 548 +
tk_literal 548 +
line_begin 548 68
column_begin 548 14
ast_edge 519 549
node_type 549 LIST_STATEMENT
ast_edge 549 550
node_type 550 token
tk_type 550 29
tk_image 550 .
tk_literal 550 UNDEFINED
line_begin 550 69
column_begin 550 4
ast_edge 549 551
node_type 551 token
tk_type 551 0
tk_image 551 y
tk_literal 551 y
line_begin 551 69
column_begin 551 5
ast_edge 549 552
node_type 552 token
tk_type 552 28
tk_image 552 =
tk_literal 552 UNDEFINED
line_begin 552 69
column_begin 552 7
ast_edge 549 553
node_type 553 EXPRESSION
ast_edge 553 554
node_type 554 PRODUCT
ast_edge 554 555
node_type 555 MODULO
ast_edge 555 556
node_type 556 POWER
ast_edge 556 557
node_type 557 BITSHIFT
ast_edge 557 558
node_type 558 BITWISEANDOR
ast_edge 558 559
node_type 559 BITWISENOT
ast_edge 559 560
node_type 560 OPERAND
ast_edge 560 561
node_type 561 IDREF
ast_edge 561 562
node_type 562 token
tk_type 562 0
tk_image 562 identifier
tk_literal 562 v1
line_begin 562 69
column_begin 562 9
ast_edge 561 563
node_type 563 token
tk_type 563 0
tk_image 563 identifier
tk_literal 563 y
line_begin 563 69
column_begin 563 12
ast_edge 556 564
node_type 564 POWERREST
ast_edge 553 565
node_type 565 PRODUCT
ast_edge 565 566
node_type 566 MODULO
ast_edge 566 567
node_type 567 POWER
ast_edge 567 568
node_type 568 BITSHIFT
ast_edge 568 569
node_type 569 BITWISEANDOR
ast_edge 569 570
node_type 570 BITWISENOT
ast_edge 570 571
node_type 571 OPERAND
ast_edge 571 572
node_type 572 IDREF
ast_edge 572 573
node_type 573 token
tk_type 573 0
tk_image 573 identifier
tk_literal 573 v2
line_begin 573 69
column_begin 573 16
ast_edge 572 574
node_type 574 token
tk_type 574 0
tk_image 574 identifier
tk_literal 574 y
line_begin 574 69
column_begin 574 19
ast_edge 567 575
node_type 575 POWERREST
ast_edge 553 576
node_type 576 BINARY_ARITHM_OP
ast_edge 553 577
node_type 577 token
tk_type 577 13
tk_image 577 +
tk_literal 577 +
line_begin 577 69
column_begin 577 14
ast_edge 519 578
node_type 578 token
tk_type 578 21
tk_image 578 }
tk_literal 578 UNDEFINED
line_begin 578 70
column_begin 578 2
ast_edge 512 579
node_type 579 STAT
ast_edge 510 580
node_type 580 token
tk_type 580 21
tk_image 580 }
tk_literal 580 UNDEFINED
line_begin 580 71
column_begin 580 0
ast_edge 498 581
node_type 581 POWERREST
ast_edge 3 582
node_type 582 STAT
ast_edge 582 583
node_type 583 COMMAND
ast_edge 583 584
node_type 584 IDREF
ast_edge 584 585
node_type 585 token
tk_type 585 0
tk_image 585 identifier
tk_literal 585 math
line_begin 585 79
column_begin 585 0
ast_edge 584 586
node_type 586 token
tk_type 586 0
tk_image 586 identifier
tk_literal 586 vec2
line_begin 586 79
column_begin 586 5
ast_edge 584 587
node_type 587 token
tk_type 587 0
tk_image 587 identifier
tk_literal 587 sub
line_begin 587 79
column_begin 587 10
ast_edge 583 588
node_type 588 EXPRESSION
ast_edge 588 589
node_type 589 PRODUCT
ast_edge 589 590
node_type 590 MODULO
ast_edge 590 591
node_type 591 POWER
ast_edge 591 592
node_type 592 BITSHIFT
ast_edge 592 593
node_type 593 BITWISEANDOR
ast_edge 593 594
node_type 594 BITWISENOT
ast_edge 594 595
node_type 595 OPERAND
ast_edge 595 596
node_type 596 LAMBDA
ast_edge 596 597
node_type 597 token
tk_type 597 7
tk_image 597 function
tk_literal 597 function
line_begin 597 79
column_begin 597 16
ast_edge 596 598
node_type 598 token
tk_type 598 22
tk_image 598 (
tk_literal 598 UNDEFINED
line_begin 598 79
column_begin 598 24
ast_edge 596 599
node_type 599 FORMAL_PARAMETER_LIST
ast_edge 599 600
node_type 600 token
tk_type 600 0
tk_image 600 identifier
tk_literal 600 v1
line_begin 600 79
column_begin 600 25
ast_edge 599 601
node_type 601 token
tk_type 601 0
tk_image 601 identifier
tk_literal 601 v2
line_begin 601 79
column_begin 601 29
ast_edge 596 602
node_type 602 token
tk_type 602 23
tk_image 602 )
tk_literal 602 UNDEFINED
line_begin 602 79
column_begin 602 31
ast_edge 596 603
node_type 603 BLOCK
ast_edge 603 604
node_type 604 token
tk_type 604 20
tk_image 604 {
tk_literal 604 UNDEFINED
line_begin 604 79
column_begin 604 33
ast_edge 603 605
node_type 605 STATLIST
ast_edge 605 606
node_type 606 STAT
ast_edge 605 607
node_type 607 STAT
ast_edge 607 608
node_type 608 RETURN
ast_edge 608 609
node_type 609 CONDITION
ast_edge 609 610
node_type 610 COMPARISON
ast_edge 610 611
node_type 611 EXPRESSION
ast_edge 611 612
node_type 612 LIST
ast_edge 612 613
node_type 613 LIST_STATEMENT
ast_edge 613 614
node_type 614 token
tk_type 614 29
tk_image 614 .
tk_literal 614 UNDEFINED
line_begin 614 81
column_begin 614 4
ast_edge 613 615
node_type 615 token
tk_type 615 0
tk_image 615 x
tk_literal 615 x
line_begin 615 81
column_begin 615 5
ast_edge 613 616
node_type 616 token
tk_type 616 28
tk_image 616 =
tk_literal 616 UNDEFINED
line_begin 616 81
column_begin 616 7
ast_edge 613 617
node_type 617 EXPRESSION
ast_edge 617 618
node_type 618 PRODUCT
ast_edge 618 619
node_type 619 MODULO
ast_edge 619 620
node_type 620 POWER
ast_edge 620 621
node_type 621 BITSHIFT
ast_edge 621 622
node_type 622 BITWISEANDOR
ast_edge 622 623
node_type 623 BITWISENOT
ast_edge 623 624
node_type 624 OPERAND
ast_edge 624 625
node_type 625 IDREF
ast_edge 625 626
node_type 626 token
tk_type 626 0
tk_image 626 identifier
tk_literal 626 v1
line_begin 626 81
column_begin 626 9
ast_edge 625 627
node_type 627 token
tk_type 627 0
tk_image 627 identifier
tk_literal 627 x
line_begin 627 81
column_begin 627 12
ast_edge 620 628
node_type 628 POWERREST
ast_edge 617 629
node_type 629 PRODUCT
ast_edge 629 630
node_type 630 MODULO
ast_edge 630 631
node_type 631 POWER
ast_edge 631 632
node_type 632 BITSHIFT
ast_edge 632 633
node_type 633 BITWISEANDOR
ast_edge 633 634
node_type 634 BITWISENOT
ast_edge 634 635
node_type 635 OPERAND
ast_edge 635 636
node_type 636 IDREF
ast_edge 636 637
node_type 637 token
tk_type 637 0
tk_image 637 identifier
tk_literal 637 v2
line_begin 637 81
column_begin 637 16
ast_edge 636 638
node_type 638 token
tk_type 638 0
tk_image 638 identifier
tk_literal 638 x
line_begin 638 81
column_begin 638 19
ast_edge 631 639
node_type 639 POWERREST
ast_edge 617 640
node_type 640 BINARY_ARITHM_OP
ast_edge 617 641
node_type 641 token
tk_type 641 13
tk_image 641 -
tk_literal 641 -
line_begin 641 81
column_begin 641 14
ast_edge 612 642
node_type 642 LIST_STATEMENT
ast_edge 642 643
node_type 643 token
tk_type 643 29
tk_image 643 .
tk_literal 643 UNDEFINED
line_begin 643 82
column_begin 643 4
ast_edge 642 644
node_type 644 token
tk_type 644 0
tk_image 644 y
tk_literal 644 y
line_begin 644 82
column_begin 644 5
ast_edge 642 645
node_type 645 token
tk_type 645 28
tk_image 645 =
tk_literal 645 UNDEFINED
line_begin 645 82
column_begin 645 7
ast_edge 642 646
node_type 646 EXPRESSION
ast_edge 646 647
node_type 647 PRODUCT
ast_edge 647 648
node_type 648 MODULO
ast_edge 648 649
node_type 649 POWER
ast_edge 649 650
node_type 650 BITSHIFT
ast_edge 650 651
node_type 651 BITWISEANDOR
ast_edge 651 652
node_type 652 BITWISENOT
ast_edge 652 653
node_type 653 OPERAND
ast_edge 653 654
node_type 654 IDREF
ast_edge 654 655
node_type 655 token
tk_type 655 0
tk_image 655 identifier
tk_literal 655 v1
line_begin 655 82
column_begin 655 9
ast_edge 654 656
node_type 656 token
tk_type 656 0
tk_image 656 identifier
tk_literal 656 y
line_begin 656 82
column_begin 656 12
ast_edge 649 657
node_type 657 POWERREST
ast_edge 646 658
node_type 658 PRODUCT
ast_edge 658 659
node_type 659 MODULO
ast_edge 659 660
node_type 660 POWER
ast_edge 660 661
node_type 661 BITSHIFT
ast_edge 661 662
node_type 662 BITWISEANDOR
ast_edge 662 663
node_type 663 BITWISENOT
ast_edge 663 664
node_type 664 OPERAND
ast_edge 664 665
node_type 665 IDREF
ast_edge 665 666
node_type 666 token
tk_type 666 0
tk_image 666 identifier
tk_literal 666 v2
line_begin 666 82
column_begin 666 16
ast_edge 665 667
node_type 667 token
tk_type 667 0
tk_image 667 identifier
tk_literal 667 y
line_begin 667 82
column_begin 667 19
ast_edge 660 668
node_type 668 POWERREST
ast_edge 646 669
node_type 669 BINARY_ARITHM_OP
ast_edge 646 670
node_type 670 token
tk_type 670 13
tk_image 670 -
tk_literal 670 -
line_begin 670 82
column_begin 670 14
ast_edge 612 671
node_type 671 token
tk_type 671 21
tk_image 671 }
tk_literal 671 UNDEFINED
line_begin 671 83
column_begin 671 2
ast_edge 605 672
node_type 672 STAT
ast_edge 603 673
node_type 673 token
tk_type 673 21
tk_image 673 }
tk_literal 673 UNDEFINED
line_begin 673 84
column_begin 673 0
ast_edge 591 674
node_type 674 POWERREST
ast_edge 3 675
node_type 675 STAT
ast_edge 675 676
node_type 676 COMMAND
ast_edge 676 677
node_type 677 IDREF
ast_edge 677 678
node_type 678 token
tk_type 678 0
tk_image 678 identifier
tk_literal 678 math
line_begin 678 92
column_begin 678 0
ast_edge 677 679
node_type 679 token
tk_type 679 0
tk_image 679 identifier
tk_literal 679 vec2
line_begin 679 92
column_begin 679 5
ast_edge 677 680
node_type 680 token
tk_type 680 0
tk_image 680 identifier
tk_literal 680 scale
line_begin 680 92
column_begin 680 10
ast_edge 676 681
node_type 681 EXPRESSION
ast_edge 681 682
node_type 682 PRODUCT
ast_edge 682 683
node_type 683 MODULO
ast_edge 683 684
node_type 684 POWER
ast_edge 684 685
node_type 685 BITSHIFT
ast_edge 685 686
node_type 686 BITWISEANDOR
ast_edge 686 687
node_type 687 BITWISENOT
ast_edge 687 688
node_type 688 OPERAND
ast_edge 688 689
node_type 689 LAMBDA
ast_edge 689 690
node_type 690 token
tk_type 690 7
tk_image 690 function
tk_literal 690 function
line_begin 690 92
column_begin 690 18
ast_edge 689 691
node_type 691 token
tk_type 691 22
tk_image 691 (
tk_literal 691 UNDEFINED
line_begin 691 92
column_begin 691 26
ast_edge 689 692
node_type 692 FORMAL_PARAMETER_LIST
ast_edge 692 693
node_type 693 token
tk_type 693 0
tk_image 693 identifier
tk_literal 693 v
line_begin 693 92
column_begin 693 27
ast_edge 692 694
node_type 694 token
tk_type 694 0
tk_image 694 identifier
tk_literal 694 s
line_begin 694 92
column_begin 694 30
ast_edge 689 695
node_type 695 token
tk_type 695 23
tk_image 695 )
tk_literal 695 UNDEFINED
line_begin 695 92
column_begin 695 31
ast_edge 689 696
node_type 696 BLOCK
ast_edge 696 697
node_type 697 token
tk_type 697 20
tk_image 697 {
tk_literal 697 UNDEFINED
line_begin 697 92
column_begin 697 33
ast_edge 696 698
node_type 698 STATLIST
ast_edge 698 699
node_type 699 STAT
ast_edge 698 700
node_type 700 STAT
ast_edge 700 701
node_type 701 RETURN
ast_edge 701 702
node_type 702 CONDITION
ast_edge 702 703
node_type 703 COMPARISON
ast_edge 703 704
node_type 704 EXPRESSION
ast_edge 704 705
node_type 705 LIST
ast_edge 705 706
node_type 706 LIST_STATEMENT
ast_edge 706 707
node_type 707 token
tk_type 707 29
tk_image 707 .
tk_literal 707 UNDEFINED
line_begin 707 94
column_begin 707 4
ast_edge 706 708
node_type 708 token
tk_type 708 0
tk_image 708 x
tk_literal 708 x
line_begin 708 94
column_begin 708 5
ast_edge 706 709
node_type 709 token
tk_type 709 28
tk_image 709 =
tk_literal 709 UNDEFINED
line_begin 709 94
column_begin 709 7
ast_edge 706 710
node_type 710 EXPRESSION
ast_edge 710 711
node_type 711 PRODUCT
ast_edge 711 712
node_type 712 MODULO
ast_edge 712 713
node_type 713 POWER
ast_edge 713 714
node_type 714 BITSHIFT
ast_edge 714 715
node_type 715 BITWISEANDOR
ast_edge 715 716
node_type 716 BITWISENOT
ast_edge 716 717
node_type 717 OPERAND
ast_edge 717 718
node_type 718 IDREF
ast_edge 718 719
node_type 719 token
tk_type 719 0
tk_image 719 identifier
tk_literal 719 v
line_begin 719 94
column_begin 719 9
ast_edge 718 720
node_type 720 token
tk_type 720 0
tk_image 720 identifier
tk_literal 720 x
line_begin 720 94
column_begin 720 11
ast_edge 713 721
node_type 721 POWERREST
ast_edge 711 722
node_type 722 MODULO
ast_edge 722 723
node_type 723 POWER
ast_edge 723 724
node_type 724 BITSHIFT
ast_edge 724 725
node_type 725 BITWISEANDOR
ast_edge 725 726
node_type 726 BITWISENOT
ast_edge 726 727
node_type 727 OPERAND
ast_edge 727 728
node_type 728 IDREF
ast_edge 728 729
node_type 729 token
tk_type 729 0
tk_image 729 identifier
tk_literal 729 s
line_begin 729 94
column_begin 729 15
ast_edge 723 730
node_type 730 POWERREST
ast_edge 711 731
node_type 731 BINARY_ARITHM_OP
ast_edge 711 732
node_type 732 token
tk_type 732 14
tk_image 732 *
tk_literal 732 *
line_begin 732 94
column_begin 732 13
ast_edge 705 733
node_type 733 LIST_STATEMENT
ast_edge 733 734
node_type 734 token
tk_type 734 29
tk_image 734 .
tk_literal 734 UNDEFINED
line_begin 734 95
column_begin 734 4
ast_edge 733 735
node_type 735 token
tk_type 735 0
tk_image 735 y
tk_literal 735 y
line_begin 735 95
column_begin 735 5
ast_edge 733 736
node_type 736 token
tk_type 736 28
tk_image 736 =
tk_literal 736 UNDEFINED
line_begin 736 95
column_begin 736 7
ast_edge 733 737
node_type 737 EXPRESSION
ast_edge 737 738
node_type 738 PRODUCT
ast_edge 738 739
node_type 739 MODULO
ast_edge 739 740
node_type 740 POWER
ast_edge 740 741
node_type 741 BITSHIFT
ast_edge 741 742
node_type 742 BITWISEANDOR
ast_edge 742 743
node_type 743 BITWISENOT
ast_edge 743 744
node_type 744 OPERAND
ast_edge 744 745
node_type 745 IDREF
ast_edge 745 746
node_type 746 token
tk_type 746 0
tk_image 746 identifier
tk_literal 746 v
line_begin 746 95
column_begin 746 9
ast_edge 745 747
node_type 747 token
tk_type 747 0
tk_image 747 identifier
tk_literal 747 y
line_begin 747 95
column_begin 747 11
ast_edge 740 748
node_type 748 POWERREST
ast_edge 738 749
node_type 749 MODULO
ast_edge 749 750
node_type 750 POWER
ast_edge 750 751
node_type 751 BITSHIFT
ast_edge 751 752
node_type 752 BITWISEANDOR
ast_edge 752 753
node_type 753 BITWISENOT
ast_edge 753 754
node_type 754 OPERAND
ast_edge 754 755
node_type 755 IDREF
ast_edge 755 756
node_type 756 token
tk_type 756 0
tk_image 756 identifier
tk_literal 756 s
line_begin 756 95
column_begin 756 15
ast_edge 750 757
node_type 757 POWERREST
ast_edge 738 758
node_type 758 BINARY_ARITHM_OP
ast_edge 738 759
node_type 759 token
tk_type 759 14
tk_image 759 *
tk_literal 759 *
line_begin 759 95
column_begin 759 13
ast_edge 705 760
node_type 760 token
tk_type 760 21
tk_image 760 }
tk_literal 760 UNDEFINED
line_begin 760 96
column_begin 760 2
ast_edge 698 761
node_type 761 STAT
ast_edge 696 762
node_type 762 token
tk_type 762 21
tk_image 762 }
tk_literal 762 UNDEFINED
line_begin 762 97
column_begin 762 0
ast_edge 684 763
node_type 763 POWERREST
ast_edge 3 764
node_type 764 STAT
ast_edge 764 765
node_type 765 COMMAND
ast_edge 765 766
node_type 766 IDREF
ast_edge 766 767
node_type 767 token
tk_type 767 0
tk_image 767 identifier
tk_literal 767 math
line_begin 767 105
column_begin 767 0
ast_edge 766 768
node_type 768 token
tk_type 768 0
tk_image 768 identifier
tk_literal 768 vec2
line_begin 768 105
column_begin 768 5
ast_edge 766 769
node_type 769 token
tk_type 769 0
tk_image 769 identifier
tk_literal 769 dot
line_begin 769 105
column_begin 769 10
ast_edge 765 770
node_type 770 EXPRESSION
ast_edge 770 771
node_type 771 PRODUCT
ast_edge 771 772
node_type 772 MODULO
ast_edge 772 773
node_type 773 POWER
ast_edge 773 774
node_type 774 BITSHIFT
ast_edge 774 775
node_type 775 BITWISEANDOR
ast_edge 775 776
node_type 776 BITWISENOT
ast_edge 776 777
node_type 777 OPERAND
ast_edge 777 778
node_type 778 LAMBDA
ast_edge 778 779
node_type 779 token
tk_type 779 7
tk_image 779 function
tk_literal 779 function
line_begin 779 105
column_begin 779 16
ast_edge 778 780
node_type 780 token
tk_type 780 22
tk_image 780 (
tk_literal 780 UNDEFINED
line_begin 780 105
column_begin 780 24
ast_edge 778 781
node_type 781 FORMAL_PARAMETER_LIST
ast_edge 781 782
node_type 782 token
tk_type 782 0
tk_image 782 identifier
tk_literal 782 v1
line_begin 782 105
column_begin 782 25
ast_edge 781 783
node_type 783 token
tk_type 783 0
tk_image 783 identifier
tk_literal 783 v2
line_begin 783 105
column_begin 783 29
ast_edge 778 784
node_type 784 token
tk_type 784 23
tk_image 784 )
tk_literal 784 UNDEFINED
line_begin 784 105
column_begin 784 31
ast_edge 778 785
node_type 785 BLOCK
ast_edge 785 786
node_type 786 token
tk_type 786 20
tk_image 786 {
tk_literal 786 UNDEFINED
line_begin 786 105
column_begin 786 33
ast_edge 785 787
node_type 787 STATLIST
ast_edge 787 788
node_type 788 STAT
ast_edge 787 789
node_type 789 STAT
ast_edge 789 790
node_type 790 RETURN
ast_edge 790 791
node_type 791 CONDITION
ast_edge 791 792
node_type 792 COMPARISON
ast_edge 792 793
node_type 793 EXPRESSION
ast_edge 793 794
node_type 794 PRODUCT
ast_edge 794 795
node_type 795 MODULO
ast_edge 795 796
node_type 796 POWER
ast_edge 796 797
node_type 797 BITSHIFT
ast_edge 797 798
node_type 798 BITWISEANDOR
ast_edge 798 799
node_type 799 BITWISENOT
ast_edge 799 800
node_type 800 OPERAND
ast_edge 800 801
node_type 801 IDREF
ast_edge 801 802
node_type 802 token
tk_type 802 0
tk_image 802 identifier
tk_literal 802 v1
line_begin 802 106
column_begin 802 9
ast_edge 801 803
node_type 803 token
tk_type 803 0
tk_image 803 identifier
tk_literal 803 x
line_begin 803 106
column_begin 803 12
ast_edge 796 804
node_type 804 POWERREST
ast_edge 794 805
node_type 805 MODULO
ast_edge 805 806
node_type 806 POWER
ast_edge 806 807
node_type 807 BITSHIFT
ast_edge 807 808
node_type 808 BITWISEANDOR
ast_edge 808 809
node_type 809 BITWISENOT
ast_edge 809 810
node_type 810 OPERAND
ast_edge 810 811
node_type 811 IDREF
ast_edge 811 812
node_type 812 token
tk_type 812 0
tk_image 812 identifier
tk_literal 812 v2
line_begin 812 106
column_begin 812 16
ast_edge 811 813
node_type 813 token
tk_type 813 0
tk_image 813 identifier
tk_literal 813 x
line_begin 813 106
column_begin 813 19
ast_edge 806 814
node_type 814 POWERREST
ast_edge 794 815
node_type 815 BINARY_ARITHM_OP
ast_edge 794 816
node_type 816 token
tk_type 816 14
tk_image 816 *
tk_literal 816 *
line_begin 816 106
column_begin 816 14
ast_edge 793 817
node_type 817 PRODUCT
ast_edge 817 818
node_type 818 MODULO
ast_edge 818 819
node_type 819 POWER
ast_edge 819 820
node_type 820 BITSHIFT
ast_edge 820 821
node_type 821 BITWISEANDOR
ast_edge 821 822
node_type 822 BITWISENOT
ast_edge 822 823
node_type 823 OPERAND
ast_edge 823 824
node_type 824 IDREF
ast_edge 824 825
node_type 825 token
tk_type 825 0
tk_image 825 identifier
tk_literal 825 v1
line_begin 825 106
column_begin 825 23
ast_edge 824 826
node_type 826 token
tk_type 826 0
tk_image 826 identifier
tk_literal 826 y
line_begin 826 106
column_begin 826 26
ast_edge 819 827
node_type 827 POWERREST
ast_edge 817 828
node_type 828 MODULO
ast_edge 828 829
node_type 829 POWER
ast_edge 829 830
node_type 830 BITSHIFT
ast_edge 830 831
node_type 831 BITWISEANDOR
ast_edge 831 832
node_type 832 BITWISENOT
ast_edge 832 833
node_type 833 OPERAND
ast_edge 833 834
node_type 834 IDREF
ast_edge 834 835
node_type 835 token
tk_type 835 0
tk_image 835 identifier
tk_literal 835 v2
line_begin 835 106
column_begin 835 30
ast_edge 834 836
node_type 836 token
tk_type 836 0
tk_image 836 identifier
tk_literal 836 y
line_begin 836 106
column_begin 836 33
ast_edge 829 837
node_type 837 POWERREST
ast_edge 817 838
node_type 838 BINARY_ARITHM_OP
ast_edge 817 839
node_type 839 token
tk_type 839 14
tk_image 839 *
tk_literal 839 *
line_begin 839 106
column_begin 839 28
ast_edge 793 840
node_type 840 BINARY_ARITHM_OP
ast_edge 793 841
node_type 841 token
tk_type 841 13
tk_image 841 +
tk_literal 841 +
line_begin 841 106
column_begin 841 21
ast_edge 787 842
node_type 842 STAT
ast_edge 785 843
node_type 843 token
tk_type 843 21
tk_image 843 }
tk_literal 843 UNDEFINED
line_begin 843 107
column_begin 843 0
ast_edge 773 844
node_type 844 POWERREST
ast_edge 3 845
node_type 845 STAT
ast_edge 845 846
node_type 846 COMMAND
ast_edge 846 847
node_type 847 IDREF
ast_edge 847 848
node_type 848 token
tk_type 848 0
tk_image 848 identifier
tk_literal 848 math
line_begin 848 109
column_begin 848 0
ast_edge 847 849
node_type 849 token
tk_type 849 0
tk_image 849 identifier
tk_literal 849 vec2
line_begin 849 109
column_begin 849 5
ast_edge 847 850
node_type 850 token
tk_type 850 0
tk_image 850 identifier
tk_literal 850 equal
line_begin 850 109
column_begin 850 10
ast_edge 846 851
node_type 851 EXPRESSION
ast_edge 851 852
node_type 852 PRODUCT
ast_edge 852 853
node_type 853 MODULO
ast_edge 853 854
node_type 854 POWER
ast_edge 854 855
node_type 855 BITSHIFT
ast_edge 855 856
node_type 856 BITWISEANDOR
ast_edge 856 857
node_type 857 BITWISENOT
ast_edge 857 858
node_type 858 OPERAND
ast_edge 858 859
node_type 859 LAMBDA
ast_edge 859 860
node_type 860 token
tk_type 860 7
tk_image 860 function
tk_literal 860 function
line_begin 860 109
column_begin 860 18
ast_edge 859 861
node_type 861 token
tk_type 861 22
tk_image 861 (
tk_literal 861 UNDEFINED
line_begin 861 109
column_begin 861 26
ast_edge 859 862
node_type 862 FORMAL_PARAMETER_LIST
ast_edge 862 863
node_type 863 token
tk_type 863 0
tk_image 863 identifier
tk_literal 863 v1
line_begin 863 109
column_begin 863 27
ast_edge 862 864
node_type 864 token
tk_type 864 0
tk_image 864 identifier
tk_literal 864 v2
line_begin 864 109
column_begin 864 31
ast_edge 859 865
node_type 865 token
tk_type 865 23
tk_image 865 )
tk_literal 865 UNDEFINED
line_begin 865 109
column_begin 865 33
ast_edge 859 866
node_type 866 BLOCK
ast_edge 866 867
node_type 867 token
tk_type 867 20
tk_image 867 {
tk_literal 867 UNDEFINED
line_begin 867 109
column_begin 867 35
ast_edge 866 868
node_type 868 STATLIST
ast_edge 868 869
node_type 869 STAT
ast_edge 868 870
node_type 870 STAT
ast_edge 870 871
node_type 871 RETURN
ast_edge 871 872
node_type 872 CONDITION
ast_edge 872 873
node_type 873 COMPARISON
ast_edge 873 874
node_type 874 EXPRESSION
ast_edge 874 875
node_type 875 PRODUCT
ast_edge 875 876
node_type 876 MODULO
ast_edge 876 877
node_type 877 POWER
ast_edge 877 878
node_type 878 BITSHIFT
ast_edge 878 879
node_type 879 BITWISEANDOR
ast_edge 879 880
node_type 880 BITWISENOT
ast_edge 880 881
node_type 881 OPERAND
ast_edge 881 882
node_type 882 CONDITION
ast_edge 882 883
node_type 883 COMPARISON
ast_edge 883 884
node_type 884 EXPRESSION
ast_edge 884 885
node_type 885 PRODUCT
ast_edge 885 886
node_type 886 MODULO
ast_edge 886 887
node_type 887 POWER
ast_edge 887 888
node_type 888 BITSHIFT
ast_edge 888 889
node_type 889 BITWISEANDOR
ast_edge 889 890
node_type 890 BITWISENOT
ast_edge 890 891
node_type 891 OPERAND
ast_edge 891 892
node_type 892 IDREF
ast_edge 892 893
node_type 893 token
tk_type 893 0
tk_image 893 identifier
tk_literal 893 v1
line_begin 893 110
column_begin 893 10
ast_edge 892 894
node_type 894 token
tk_type 894 0
tk_image 894 identifier
tk_literal 894 x
line_begin 894 110
column_begin 894 13
ast_edge 887 895
node_type 895 POWERREST
ast_edge 883 896
node_type 896 REL_OP
ast_edge 883 897
node_type 897 token
tk_type 897 30
tk_image 897 ==
tk_literal 897 ==
line_begin 897 110
column_begin 897 15
ast_edge 883 898
node_type 898 EXPRESSION
ast_edge 898 899
node_type 899 PRODUCT
ast_edge 899 900
node_type 900 MODULO
ast_edge 900 901
node_type 901 POWER
ast_edge 901 902
node_type 902 BITSHIFT
ast_edge 902 903
node_type 903 BITWISEANDOR
ast_edge 903 904
node_type 904 BITWISENOT
ast_edge 904 905
node_type 905 OPERAND
ast_edge 905 906
node_type 906 IDREF
ast_edge 906 907
node_type 907 token
tk_type 907 0
tk_image 907 identifier
tk_literal 907 v2
line_begin 907 110
column_begin 907 18
ast_edge 906 908
node_type 908 token
tk_type 908 0
tk_image 908 identifier
tk_literal 908 x
line_begin 908 110
column_begin 908 21
ast_edge 901 909
node_type 909 POWERREST
ast_edge 881 910
node_type 910 token
tk_type 910 23
tk_image 910 )
tk_literal 910 UNDEFINED
line_begin 910 110
column_begin 910 22
ast_edge 877 911
node_type 911 POWERREST
ast_edge 872 912
node_type 912 COMPARISON
ast_edge 912 913
node_type 913 EXPRESSION
ast_edge 913 914
node_type 914 PRODUCT
ast_edge 914 915
node_type 915 MODULO
ast_edge 915 916
node_type 916 POWER
ast_edge 916 917
node_type 917 BITSHIFT
ast_edge 917 918
node_type 918 BITWISEANDOR
ast_edge 918 919
node_type 919 BITWISENOT
ast_edge 919 920
node_type 920 OPERAND
ast_edge 920 921
node_type 921 CONDITION
ast_edge 921 922
node_type 922 COMPARISON
ast_edge 922 923
node_type 923 EXPRESSION
ast_edge 923 924
node_type 924 PRODUCT
ast_edge 924 925
node_type 925 MODULO
ast_edge 925 926
node_type 926 POWER
ast_edge 926 927
node_type 927 BITSHIFT
ast_edge 927 928
node_type 928 BITWISEANDOR
ast_edge 928 929
node_type 929 BITWISENOT
ast_edge 929 930
node_type 930 OPERAND
ast_edge 930 931
node_type 931 IDREF
ast_edge 931 932
node_type 932 token
tk_type 932 0
tk_image 932 identifier
tk_literal 932 v1
line_begin 932 110
column_begin 932 29
ast_edge 931 933
node_type 933 token
tk_type 933 0
tk_image 933 identifier
tk_literal 933 y
line_begin 933 110
column_begin 933 32
ast_edge 926 934
node_type 934 POWERREST
ast_edge 922 935
node_type 935 REL_OP
ast_edge 922 936
node_type 936 token
tk_type 936 30
tk_image 936 ==
tk_literal 936 ==
line_begin 936 110
column_begin 936 34
ast_edge 922 937
node_type 937 EXPRESSION
ast_edge 937 938
node_type 938 PRODUCT
ast_edge 938 939
node_type 939 MODULO
ast_edge 939 940
node_type 940 POWER
ast_edge 940 941
node_type 941 BITSHIFT
ast_edge 941 942
node_type 942 BITWISEANDOR
ast_edge 942 943
node_type 943 BITWISENOT
ast_edge 943 944
node_type 944 OPERAND
ast_edge 944 945
node_type 945 IDREF
ast_edge 945 946
node_type 946 token
tk_type 946 0
tk_image 946 identifier
tk_literal 946 v2
line_begin 946 110
column_begin 946 37
ast_edge 945 947
node_type 947 token
tk_type 947 0
tk_image 947 identifier
tk_literal 947 y
line_begin 947 110
column_begin 947 40
ast_edge 940 948
node_type 948 POWERREST
ast_edge 920 949
node_type 949 token
tk_type 949 23
tk_image 949 )
tk_literal 949 UNDEFINED
line_begin 949 110
column_begin 949 41
ast_edge 916 950
node_type 950 POWERREST
ast_edge 872 951
node_type 951 BINARY_LOGIC_OP
ast_edge 872 952
node_type 952 token
tk_type 952 11
tk_image 952 and
tk_literal 952 and
line_begin 952 110
column_begin 952 24
ast_edge 868 953
node_type 953 STAT
ast_edge 866 954
node_type 954 token
tk_type 954 21
tk_image 954 }
tk_literal 954 UNDEFINED
line_begin 954 111
column_begin 954 0
ast_edge 854 955
node_type 955 POWERREST
